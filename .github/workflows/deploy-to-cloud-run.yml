name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: omics-ai-mcp
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for Google Artifact Registry
      run: |
        gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Create Artifact Registry repository if not exists
      run: |
        gcloud artifacts repositories create cloud-run-images \
          --repository-format=docker \
          --location=$REGION \
          --description="Docker images for Cloud Run services" || true

    - name: Build Docker image
      run: |
        docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-images/$SERVICE_NAME:$GITHUB_SHA .

    - name: Push Docker image to Artifact Registry
      run: |
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-images/$SERVICE_NAME:$GITHUB_SHA

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-images/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 512Mi \
          --max-instances 100 \
          --timeout 300 \
          --set-env-vars NODE_ENV=production

    - name: Get Service URL
      run: |
        echo "Service deployed to:"
        gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)'